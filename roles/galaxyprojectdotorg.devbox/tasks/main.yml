---
- name: Install the debs
  sudo: True
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - build-essential
    - curl
    - git
    - m4
    - ruby
    - texinfo
    - libbz2-dev
    - libcurl4-openssl-dev
    - libexpat-dev
    - libncurses-dev
    - libncursesw5-dev
    - zlib1g-dev
    - python-dev
    - cmake

- name: Install linuxbrew
  sudo: True
  sudo_user: "{{ dev_user_name }}"
  shell: "ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/linuxbrew/go/install)\""

- name: Tap galaxyproject recipes
  sudo: True
  sudo_user: "{{ dev_user_name }}"
  shell: "{{ dev_user_home }}//.linuxbrew/bin/brew tap galaxyproject/tap"

- name: Install planemo
  sudo: True
  sudo_user: "{{ dev_user_name }}"
  shell: "{{ dev_user_home }}/.linuxbrew/bin/brew install -v planemo"

- name: Setup .planemo.yml
  template: src=planemo.yml.j2 dest={{ dev_user_home }}/.planemo.yml

# TODO: MANPATH, INFOPATH
- name: Add linuxbrew to dev users PATH
  lineinfile: "dest={{ dev_user_shellrc }} line='export PATH={{ dev_user_home }}/.linuxbrew/bin:$PATH'"

- name: Install the dev tools
  sudo: True
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - emacs24-nox

- name: Install node and npm for codebox.
  sudo: True
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - nodejs
    - npm

- name: Link nodejs to node
  sudo: True
  shell: "ln -f -s /usr/bin/nodejs /usr/bin/node"

- name: Install codebox.
  sudo: True
  sudo_user: "{{ galaxy_user_name }}"
  shell: "mkdir -p {{ codebox_path }} && cd {{ codebox_path }} && npm install codebox@{{ codebox_version }}"

- name: Add codebox to supervisor configuration.
  template: src=supervisor.conf.j2 dest=/etc/supervisor/conf.d/codebox.conf

- name: Add dev tool configuration file.
  template: src=dev_tool_conf.xml.j2 dest={{ dev_tool_conf }}

- name: Add planemo machine web content
  git: repo={{ planemo_machine_web_repo }} dest={{ planemo_machine_web_dir }} accept_hostkey=yes
  when: nginx_serve_planemo_machine_web

- name: Add small tool conf
  template: src=tool_conf.small.xml.j2 dest={{ small_tool_conf_path }}
  when: small_tool_conf

- name: Add Galaxy Restart Script
  template: src=galaxy-restart.j2 dest=/usr/bin/galaxy-restart owner=root group=root mode="u=rwx,g=rx,o=rx"

- name: Create /etc/galaxy
  file: path=/etc/galaxy state=directory owner=root group=admin mode="u=rx,g=rx,o="

- name: Add Galaxy API Key File
  template: src=api.key.j2 dest=/etc/galaxy/api.key owner=root group=admin mode="u=r,g=r,o="
